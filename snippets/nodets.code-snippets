{
    "Nodejs-import-":{
        "prefix": "rq",
        "body": [
           "require('$0');"
        ]
    },
    "Nodejs-import-fs":{
        "prefix": "fsimport",
        "body": [
           "import fs from 'fs';"
        ]
    },
    "Nodejs-import-path":{
        "prefix": "pathimport",
        "body": [
           "import path from 'path';"
        ]
    },
    "Nodejs-import-express":{
        "prefix": "expressimport",
        "body": [
           "import express from 'express';"
        ]
    },
    "Nodejs-import-morgan":{
        "prefix": "morganimport",
        "body": [
           "import morgan from 'morgan';"
        ]
    },
    "Nodejs-import-rimraf":{
        "prefix": "rimrafimport",
        "body": [
           "import rimraf from 'rimraf';"
        ]
    },
    "Nodejs-import-remove":{
        "prefix": "removeimport",
        "body": [
           "import remove from 'remove';"
        ]
    },
    "Nodejs-import-mongoose":{
        "prefix": "mongooseimport",
        "body": [
           "import mongoose from 'mongoose';"
        ]
    },
    "Nodejs-import-puppeteer":{
        "prefix": "puppeteerimport",
        "body": [
           "import puppeteer from 'puppeteer';"
        ]
    },
    "Nodejs-import-nodemailer":{
        "prefix": "nodemailerimport",
        "body": [
           "import nodemailer from 'nodemailer';"
        ]
    },
    "Nodejs-appexpress":{
        "prefix": "appexpress",
        "body": [
           "const app = express();"
        ]
    },
    "Nodejs-dotenv":{
        "prefix": "dotenv",
        "body": [
           "dotenv.config();"
        ]
    },
    "Nodejs-import-bcrypt":{
        "prefix": "bcryptimport",
        "body": [
           "import bcrypt from 'bcrypt';"
        ]
    },
    "Nodejs-import-jsonwebtoken":{
        "prefix": "jsonwebtokenimport",
        "body": [
           "import jwt from 'jsonwebtoken';"
        ]
    },
    "Nodejs-import-axios":{
        "prefix": "axiosimport",
        "body": [
           "import axios from 'axios';"
        ]
    },
    "Nodejs-import-async":{
        "prefix": "asyncimport",
        "body": [
           "import async from 'async';"
        ]
    },
    "Nodejs-appexpressRouter":{
        "prefix": "appRouter",
        "body": [
           "const app = express.Router();"
        ]
    },
    "Nodejs-schemaMongoose":{
        "prefix": "schemaMongoose",
        "body": [
           "import mongoose from 'mongoose';",
           "const Schema = mongoose.Schema;",
           " ",
           " ",
           "const userSchema = new Schema({",
           "    name:String,",
           "    surname:String,$0",
           "});",
           " ",
           "export const User = mongoose.model('User',userSchema)",
        ]
    },
    "Nodejs-appListen":{
        "prefix": "appListen",
        "body": [
          "app.listen(port,()=> console.log(`server running on port $0`))"
        ]
    },
    "Nodejs-appPost":{
        "prefix": "appPost",
        "body": [
          "app.post('/',async (req, res):Promise<void>=>{",
          "    try{",
          "        $0",
          "    } catch(err:any){",
          "        console.log(err)",
          "    }",
          "})",
        ]
    },
    "Nodejs-module-exports":{
        "prefix": "mex",
        "body": [
         "module.exports = $0;"
        ]
    },
    "Nodejs-error-find":{
        "prefix": "err",
        "body": [
         "(err:Error,data:$1):void=>{",
         "    if(err) throw err",   
         "    $0",
         "}",
        ]
    },
    "Nodejs-app.use":{
        "prefix": "use",
        "body": [
        "app.use('/$1',require('$0'))"
        ]
    },
    "Nodejs-fsfunc":{
        "prefix": "fsfunc",
        "body": [
        "fs.$1(path.join(-dirname, './', '$0'))"
        ]
    },
    "Nodejs-server":{
        "prefix": "server",
        "body": [
            "import express from 'express';",
            "const app = express();",
            "import dotenv from 'dotenv'",
            "dotenv.config();",
            "const port:string | number = process.env.port;",
            "import morgan from 'morgan';",
            "import mongoose from 'mongoose';",
                    "",
                    "",
            "const mongoURL:string = process.env.mongoURL",
                    "",
                    "",
            "const MongoDB = ():void => {",
            "    mongoose.connect(mongoURL,{",
            "        useNewUrlParser: true,",
            "        useUnifiedTopology: true,",
            "        useCreateIndex:true,",
            "    },():void=> console.log('mongoDB connected'))",
            "}",
            "MongoDB()",
            "",
            "",
            "",
            "app.use(morgan(`dev`));",
            "app.use(express.json())",
            "app.use(express.urlencoded({",
            " extended: false",
            "}))",
            "",
            "$0",
            "",
            "",
            "app.listen(port, () => console.log(`server is runnig on port $1`));"
        ]
    },
    "Nodejs-nodemailer":{
        "prefix": "nodemailer",
        "body": [
            "import nodemailer from 'nodemailer';",
            "",
            "const transporter = nodemailer.createTransport(",
            "    {",
            "        host: \"smtp.mail.ru\",",
            "        port: 465,",
            "        secure: true, // if 465 true else false",
            "        auth: {",
            "            user: \"\",",
            "            pass: \"\",",
            "        },",
            "    }",
            "    {",
            "        from: \"\",",
            "    },",
            ");",
            "",
            "export const mailer= (message:):void => {",
            "    transporter.sendMail(message,(err:Error):void => {",
            "        if (err) console.log('email dont exist')",
            "    });",
            "};",
        ]
    },
    "Nodejs-rout":{
        "prefix": "router",
        "body": [
            "import express from 'express';",
            "const app = express.Router();",
            "        ",
            "app.post('/',async (req, res):Promise<void>=>{",
            "    try{",
            "        $0",
            "    } catch(err:any){",
            "        console.log(err)",
            "    }",
            "})",
            "",
            "module.exports = app;",
        ]
    },
    "Nodejs-bcrypt-compare":{
        "prefix": "comparebcrypt",
        "body": [
            "bcrypt.compare($1,$2,(err:Error,data:boolean):void=>{",
            "    if(data){",
            "        $0",    
            "    }",
            "})",
        ]
    },
    "Nodejs-bcrypt-hash":{
        "prefix": "hashbcrypt",
        "body": [
            "bcrypt.hash($1,10,(err:Error,data:string):void=>{",
            "    $0",
            "})",
        ]
    },
    "Nodejs-mysql":{
        "prefix": "mysql",
        "body": [
            "import mysql from 'mysql';",
            "",
            "",
            "export const conn = mysql.createConnection({",
            "    host:'localhost',",
            "    user:'mysql',",
            "    database:'',",
            "    password:'mysql'",
            "})",
        ]
    },
    "Nodejs-mysqlconnection":{
        "prefix": "mysqlconn",
        "body": [
            "conn.connect((err:Error):void=>{",
            "    if(err) throw err",
            "    console.log('mysqlDB connected')",
            "})",
        ]
    },
    "Nodejs-queryRequest":{
        "prefix": "queryRequest",
        "body": [
            "conn.query($1,(err:Error,data:$2):void=>{",
            "    if(err) throw err",
            "    $0",
            "})",
        ]
    },
}
